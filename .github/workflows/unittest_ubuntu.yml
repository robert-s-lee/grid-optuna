name: "gridai lightning optuna"

on:
  push:
    paths:
      - requirements.txt
      - pytorch_lightning_simple.py
      - .github/workflows/unittest_ubuntu.yml 
  pull_request:  
    paths:
      - requirements.txt
      - pytorch_lightning_simple.py
      - .github/workflows/unittest_ubuntu.yml  
  schedule:
  # run at 13 min past the hour every day
  # MIN HOUR DOM MON DOW CMD
    - cron: 13 1,9,17 * * *

jobs:
  gridai-run:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v2

      - uses: gridai-actions/gridai-login@v0
        with:
          gridai-username: ${{ secrets.GRIDAI_USERNAME }} 
          gridai-key: ${{ secrets.GRIDAI_KEY }}

      # without --dependency_file requirements.txt match-status should result in failed
      - id: gridai-github
        run: |
          cd ${GITHUB_WORKSPACE}
          gridai.py create_run pytorch_lightning_simple.py --grid_args " --instance_type t2.medium  " --gha True
        shell: bash

      - id: gridai-github-assert
        run: |
          if [ "${{ steps.gridai-github.outputs.match-status }}" != '' ]; then
            exit 1
          fi

      # without --dependency_file requirements.txt match-status should result in failed
      - id: gridai-localdir
        run: |
          cd ${GITHUB_WORKSPACE}
          gridai.py create_run pytorch_lightning_simple.py --grid_args " --localdir --instance_type t2.medium  " --gha True
        shell: bash        

      - id: gridai-localdir-assert
        run: |
          if [ "${{ steps.gridai-localdir.outputs.match-status }}" != '' ]; then
            exit 1
          fi

      # should result in succeeded
      - id: gridai-github-dependency-file
        run: |
          cd ${GITHUB_WORKSPACE}
          gridai.py create_run pytorch_lightning_simple.py --grid_args " --instance_type t2.medium --dependency_file requirements.txt" --gha True
        shell: bash    

      - id: gridai-github-dependency-file-assert
        run: |
          if [ "${{ steps.gridai-github-dependency-file.outputs.match-status }}" != 'succeeded' ]; then
            exit 1
          fi

      # should result in succeeded
      - id: gridai-localdir-dependency-file
        run: |
          cd ${GITHUB_WORKSPACE}
          gridai.py create_run pytorch_lightning_simple.py --grid_args " --localdir --instance_type t2.medium --dependency_file requirements.txt" --gha True
        shell: bash    

      - id: gridai-dependency-file-assert
        run: |
          if [ "${{ steps.gridai-localdir-dependency-file.outputs.match-status }}" != 'succeeded' ]; then
            exit 1
          fi
